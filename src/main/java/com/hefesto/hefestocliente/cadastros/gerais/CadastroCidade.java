/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hefesto.hefestocliente.cadastros.gerais;

import com.Hefesto.core.entidades.HefCidade;
import com.Hefesto.core.entidades.HefLogradouro;
import com.Hefesto.core.entidades.HefPais;
import com.Hefesto.core.entidades.HefUf;
import com.hefesto.hefestocliente.Core.utils.MessageIcon;
import com.hefesto.hefestocliente.cadastros.geraisBean.CadastroCidadeBean;
import com.hefesto.hefestocliente.cadastros.geraisListner.CadastroCidadeListner;
import com.hefesto.hefestocliente.core.BeanEvent;
import com.hefesto.hefestocliente.core.HefInternalFrame;
import com.hefesto.hefestocomponentes.HFBaloon.HFBallonUtil;
import com.hefesto.hefestocomponentes.HFTable.utils.HFTableUtil;
import com.hefesto.hefestocomponentes.HFUtils.Messages;
import java.math.BigInteger;
import java.util.List;

/**
 *
 * @author jr
 */
public class CadastroCidade extends HefInternalFrame {

    private int countPais = 0;
    private int countUF = 0;
    private int countCID = 0;
    private int countLog = 0;
    private int PAIS_COD = countPais++;
    private int PAIS_DESC = countPais++;
    private int PAIS_OBJ = countPais++;
    private int UF_COD = countUF++;
    private int UF_DESC = countUF++;
    private int UF_PAIS = countUF++;
    private int UF_OBJ = countUF++;
    private int CID_COD = countCID++;
    private int CID_DESC = countCID++;
    private int CID_UF = countCID++;
    private int CID_OBJ = countCID++;
    private int LOG_COD = countLog++;
    private int LOG_DESC = countLog++;
    private int LOG_CID = countLog++;
    private int LOG_CEP = countLog++;
    private int LOG_OBJ = countLog++;

    private CadastroCidadeListner listner;
    private HefPais pais;
    private HefUf uf;
    private HefCidade cidade;
    private HefLogradouro log;

    public CadastroCidade() {
        initComponents();
        setmessageLabel(messageLAbel);
        CadastroCidadeBean bean = icone.getBeanInstance(CadastroCidadeBean.class);
        addBeanListner(bean);
        listner = bean;
        lookup(new BeanEvent(this, null));
        carregar(new BeanEvent(this, null));
        new HFTableUtil(listaPais).colorize().hideColumn(PAIS_OBJ);
        new HFTableUtil(listaUF).colorize().hideColumn(UF_OBJ);
        new HFTableUtil(listaCidade).colorize().hideColumn(CID_OBJ);
        new HFTableUtil(listaLog).colorize().hideColumn(LOG_OBJ);

    }

    /**
     * Creates new form HFCadastroTelas public HFCadastroTelas(HFTelaPrincipal
     * principalframe, HefUsu usuario) { super(principalframe, usuario); }
     *
     *
     *
     * /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jpane = new javax.swing.JPanel();
        messageLAbel = new com.hefesto.hefestocomponentes.HFLabel.HFLabel();
        cadastros = new javax.swing.JTabbedPane();
        paisJP = new javax.swing.JPanel();
        usuariosCadastradosJp = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaPais = new com.hefesto.hefestocomponentes.HFTable.HFTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        try {
            paisSigla = new com.hefesto.hefestocomponentes.HFTextField.HFTextField();
        } catch (java.lang.Exception e1) {
            e1.printStackTrace();
        }
        jLabel5 = new javax.swing.JLabel();
        try {
            paisDesc = new com.hefesto.hefestocomponentes.HFTextField.HFTextField();
        } catch (java.lang.Exception e1) {
            e1.printStackTrace();
        }
        estadoJP = new javax.swing.JPanel();
        usuariosCadastradosJp1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaUF = new com.hefesto.hefestocomponentes.HFTable.HFTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        try {
            ufSigla = new com.hefesto.hefestocomponentes.HFTextField.HFTextField();
        } catch (java.lang.Exception e1) {
            e1.printStackTrace();
        }
        jLabel6 = new javax.swing.JLabel();
        try {
            ufDesc = new com.hefesto.hefestocomponentes.HFTextField.HFTextField();
        } catch (java.lang.Exception e1) {
            e1.printStackTrace();
        }
        cidadeJP = new javax.swing.JPanel();
        usuariosCadastradosJp2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaCidade = new com.hefesto.hefestocomponentes.HFTable.HFTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        try {
            cidadeSigla = new com.hefesto.hefestocomponentes.HFTextField.HFTextField();
        } catch (java.lang.Exception e1) {
            e1.printStackTrace();
        }
        jLabel8 = new javax.swing.JLabel();
        try {
            cidadeDesc = new com.hefesto.hefestocomponentes.HFTextField.HFTextField();
        } catch (java.lang.Exception e1) {
            e1.printStackTrace();
        }
        logradouroJP = new javax.swing.JPanel();
        usuariosCadastradosJp3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaLog = new com.hefesto.hefestocomponentes.HFTable.HFTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        try {
            logDesc = new com.hefesto.hefestocomponentes.HFTextField.HFTextField();
        } catch (java.lang.Exception e1) {
            e1.printStackTrace();
        }
        jLabel12 = new javax.swing.JLabel();
        logCep = new com.hefesto.hefestocomponentes.HFFormattedTextField.HFFormattedTextField();

        setAutoscrolls(true);

        jpane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jpaneLayout = new javax.swing.GroupLayout(jpane);
        jpane.setLayout(jpaneLayout);
        jpaneLayout.setHorizontalGroup(
            jpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(messageLAbel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpaneLayout.setVerticalGroup(
            jpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpaneLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(messageLAbel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        usuariosCadastradosJp.setBorder(javax.swing.BorderFactory.createTitledBorder("Países Cadastrados"));

        listaPais.setColunas(new String[] {"Código", "Descrição", "OBJ"});
        listaPais.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaPaisMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listaPais);

        javax.swing.GroupLayout usuariosCadastradosJpLayout = new javax.swing.GroupLayout(usuariosCadastradosJp);
        usuariosCadastradosJp.setLayout(usuariosCadastradosJpLayout);
        usuariosCadastradosJpLayout.setHorizontalGroup(
            usuariosCadastradosJpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
        );
        usuariosCadastradosJpLayout.setVerticalGroup(
            usuariosCadastradosJpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usuariosCadastradosJpLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de País"));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Sigla:");

        paisSigla.setMaiusculo(java.lang.Boolean.TRUE);
        paisSigla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paisSiglaActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Descrição:");

        paisDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paisDescActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paisSigla, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                    .addComponent(paisDesc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paisSigla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(paisDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout paisJPLayout = new javax.swing.GroupLayout(paisJP);
        paisJP.setLayout(paisJPLayout);
        paisJPLayout.setHorizontalGroup(
            paisJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(paisJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(usuariosCadastradosJp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paisJPLayout.setVerticalGroup(
            paisJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paisJPLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 263, Short.MAX_VALUE))
            .addGroup(paisJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paisJPLayout.createSequentialGroup()
                    .addGap(102, 102, 102)
                    .addComponent(usuariosCadastradosJp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        cadastros.addTab("País", paisJP);

        usuariosCadastradosJp1.setBorder(javax.swing.BorderFactory.createTitledBorder("UFs Cadastradas "));

        listaUF.setColunas(new String[] {"Código", "Descrição", "Estado", "OBJ"});
        listaUF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaUFMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listaUF);

        javax.swing.GroupLayout usuariosCadastradosJp1Layout = new javax.swing.GroupLayout(usuariosCadastradosJp1);
        usuariosCadastradosJp1.setLayout(usuariosCadastradosJp1Layout);
        usuariosCadastradosJp1Layout.setHorizontalGroup(
            usuariosCadastradosJp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
        );
        usuariosCadastradosJp1Layout.setVerticalGroup(
            usuariosCadastradosJp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usuariosCadastradosJp1Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de UF"));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Sigla:");

        ufSigla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ufSiglaActionPerformed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Descrição:");

        ufDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ufDescActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ufSigla, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                    .addComponent(ufDesc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ufSigla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ufDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout estadoJPLayout = new javax.swing.GroupLayout(estadoJP);
        estadoJP.setLayout(estadoJPLayout);
        estadoJPLayout.setHorizontalGroup(
            estadoJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(estadoJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(usuariosCadastradosJp1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        estadoJPLayout.setVerticalGroup(
            estadoJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(estadoJPLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 272, Short.MAX_VALUE))
            .addGroup(estadoJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, estadoJPLayout.createSequentialGroup()
                    .addGap(105, 105, 105)
                    .addComponent(usuariosCadastradosJp1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        cadastros.addTab("UF", estadoJP);

        usuariosCadastradosJp2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cidades Cadastradas"));

        listaCidade.setColunas(new String[] {"Código", "Descrição", "Estado", "OBJ"});
        listaCidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaCidadeMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(listaCidade);

        javax.swing.GroupLayout usuariosCadastradosJp2Layout = new javax.swing.GroupLayout(usuariosCadastradosJp2);
        usuariosCadastradosJp2.setLayout(usuariosCadastradosJp2Layout);
        usuariosCadastradosJp2Layout.setHorizontalGroup(
            usuariosCadastradosJp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
        );
        usuariosCadastradosJp2Layout.setVerticalGroup(
            usuariosCadastradosJp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usuariosCadastradosJp2Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de Cidade"));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Sigla:");

        cidadeSigla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cidadeSiglaActionPerformed(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Descrição:");

        cidadeDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cidadeDescActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cidadeSigla, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                    .addComponent(cidadeDesc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cidadeSigla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cidadeDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout cidadeJPLayout = new javax.swing.GroupLayout(cidadeJP);
        cidadeJP.setLayout(cidadeJPLayout);
        cidadeJPLayout.setHorizontalGroup(
            cidadeJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(cidadeJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(usuariosCadastradosJp2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cidadeJPLayout.setVerticalGroup(
            cidadeJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cidadeJPLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 269, Short.MAX_VALUE))
            .addGroup(cidadeJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cidadeJPLayout.createSequentialGroup()
                    .addGap(105, 105, 105)
                    .addComponent(usuariosCadastradosJp2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        cadastros.addTab("Cidade", cidadeJP);

        usuariosCadastradosJp3.setBorder(javax.swing.BorderFactory.createTitledBorder("Logradouros Cadastrados"));

        listaLog.setColunas(new String[] {"Código", "Descrição", "Cidade", "CEP", "OBJ"});
        listaLog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaLogMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(listaLog);

        javax.swing.GroupLayout usuariosCadastradosJp3Layout = new javax.swing.GroupLayout(usuariosCadastradosJp3);
        usuariosCadastradosJp3.setLayout(usuariosCadastradosJp3Layout);
        usuariosCadastradosJp3Layout.setHorizontalGroup(
            usuariosCadastradosJp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
        );
        usuariosCadastradosJp3Layout.setVerticalGroup(
            usuariosCadastradosJp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usuariosCadastradosJp3Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de Logradouro"));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Descrição:");

        logDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logDescActionPerformed(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel12.setText("CEP:");

        logCep.setMascara("#####-###");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logDesc, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logCep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout logradouroJPLayout = new javax.swing.GroupLayout(logradouroJP);
        logradouroJP.setLayout(logradouroJPLayout);
        logradouroJPLayout.setHorizontalGroup(
            logradouroJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(logradouroJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(usuariosCadastradosJp3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        logradouroJPLayout.setVerticalGroup(
            logradouroJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logradouroJPLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 269, Short.MAX_VALUE))
            .addGroup(logradouroJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, logradouroJPLayout.createSequentialGroup()
                    .addGap(95, 95, 95)
                    .addComponent(usuariosCadastradosJp3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        cadastros.addTab("Logradouro", logradouroJP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cadastros)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cadastros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hFComboBox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hFComboBox1FocusLost

    }//GEN-LAST:event_hFComboBox1FocusLost

    private void hFComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hFComboBox1ActionPerformed

    }//GEN-LAST:event_hFComboBox1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void paisSiglaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paisSiglaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paisSiglaActionPerformed

    private void listaPaisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaPaisMouseClicked
        if (evt.getClickCount() == 2) {
            if (listaPais.getSelectedRow() > -1) {
                remontaPais((HefPais) listaPais.getValorColunaDaLinhaSelecionada(PAIS_OBJ));
                listner.carregaUF(new BeanEvent(this, (HefPais) listaPais.getValorColunaDaLinhaSelecionada(PAIS_OBJ)));
            }
        }
    }//GEN-LAST:event_listaPaisMouseClicked

    private void paisDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paisDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paisDescActionPerformed

    private void listaUFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaUFMouseClicked
        if (evt.getClickCount() == 2) {
            if (listaUF.getSelectedRow() > -1) {
                remontaUf((HefUf) listaUF.getValorColunaDaLinhaSelecionada(UF_OBJ));
                listner.carregaCidade(new BeanEvent(this, (HefUf) listaUF.getValorColunaDaLinhaSelecionada(UF_OBJ)));
            }
        }
    }//GEN-LAST:event_listaUFMouseClicked

    private void ufSiglaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ufSiglaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ufSiglaActionPerformed

    private void ufDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ufDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ufDescActionPerformed

    private void listaCidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaCidadeMouseClicked
        if (evt.getClickCount() == 2) {
            if (listaCidade.getSelectedRow() > -1) {
                remontaCidade((HefCidade) listaCidade.getValorColunaDaLinhaSelecionada(CID_OBJ));
                listner.carregaLograDouro(new BeanEvent(this, (HefCidade) listaCidade.getValorColunaDaLinhaSelecionada(CID_OBJ)));
            }
        }
    }//GEN-LAST:event_listaCidadeMouseClicked

    private void cidadeSiglaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidadeSiglaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cidadeSiglaActionPerformed

    private void cidadeDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidadeDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cidadeDescActionPerformed

    private void listaLogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaLogMouseClicked
        if (evt.getClickCount() == 2) {
            if (listaLog.getSelectedRow() > -1) {
                remontaLogradourp((HefLogradouro) listaLog.getValorColunaDaLinhaSelecionada(LOG_OBJ));
                listner.setaLogradouro(new BeanEvent(this, (HefLogradouro) listaLog.getValorColunaDaLinhaSelecionada(LOG_OBJ)));
            }
        }
    }//GEN-LAST:event_listaLogMouseClicked

    private void logDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logDescActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTabbedPane cadastros;
    private com.hefesto.hefestocomponentes.HFTextField.HFTextField cidadeDesc;
    private javax.swing.JPanel cidadeJP;
    private com.hefesto.hefestocomponentes.HFTextField.HFTextField cidadeSigla;
    private javax.swing.JPanel estadoJP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel jpane;
    private com.hefesto.hefestocomponentes.HFTable.HFTable listaCidade;
    private com.hefesto.hefestocomponentes.HFTable.HFTable listaLog;
    private com.hefesto.hefestocomponentes.HFTable.HFTable listaPais;
    private com.hefesto.hefestocomponentes.HFTable.HFTable listaUF;
    private com.hefesto.hefestocomponentes.HFFormattedTextField.HFFormattedTextField logCep;
    private com.hefesto.hefestocomponentes.HFTextField.HFTextField logDesc;
    private javax.swing.JPanel logradouroJP;
    private com.hefesto.hefestocomponentes.HFLabel.HFLabel messageLAbel;
    private com.hefesto.hefestocomponentes.HFTextField.HFTextField paisDesc;
    private javax.swing.JPanel paisJP;
    private com.hefesto.hefestocomponentes.HFTextField.HFTextField paisSigla;
    private com.hefesto.hefestocomponentes.HFTextField.HFTextField ufDesc;
    private com.hefesto.hefestocomponentes.HFTextField.HFTextField ufSigla;
    private javax.swing.JPanel usuariosCadastradosJp;
    private javax.swing.JPanel usuariosCadastradosJp1;
    private javax.swing.JPanel usuariosCadastradosJp2;
    private javax.swing.JPanel usuariosCadastradosJp3;
    // End of variables declaration//GEN-END:variables

    @Override
    public void novo() {
        Limpar();
    }

    @Override
    public void Limpar() {
        super.Limpar();
        pais = null;
        uf = null;
        cidade = null;
        log = null;
        listaLog.removeTable();
        listaCidade.removeTable();
        listaPais.removeTable();
        listaUF.removeTable();
        carregar(new BeanEvent(this, null));
    }

    @Override
    public void salvar() {
        if (cadastros.getSelectedComponent().equals(paisJP)) {
            if (paisSigla.Valida() && paisDesc.Valida()) {
                if (pais == null) {
                    pais = new HefPais();
                }
                pais.setSigla(paisSigla.getText());
                pais.setDescricao(paisDesc.getText());
                salvar(new BeanEvent(this, pais));
            }
        } else if (cadastros.getSelectedComponent().equals(estadoJP)) {
            HefPais paisUf;
            if (listaPais.getSelectedRow() > -1) {
                paisUf = (HefPais) listaPais.getValorColunaDaLinhaSelecionada(PAIS_OBJ);
                if (ufSigla.Valida() && ufDesc.Valida()) {
                    if (uf == null) {
                        uf = new HefUf();

                    }
                    uf.setIdpais(paisUf);
                    uf.setSigla(ufSigla.getText());
                    uf.setDescricao(ufDesc.getText());
                    salvar(new BeanEvent(this, uf));
                }
            } else {
                cadastros.setSelectedComponent(paisJP);
                HFBallonUtil.showTimedBallon(usuariosCadastradosJp, Messages.getMessage("cidade.pais.erro"), MessageIcon.WARNING.getIcon());
            }
        } else if (cadastros.getSelectedComponent().equals(cidadeJP)) {
            HefUf ufCidade;
            if (listaUF.getSelectedRow() > -1) {
                ufCidade = (HefUf) listaUF.getValorColunaDaLinhaSelecionada(UF_OBJ);
                if (cidadeSigla.Valida() && cidadeDesc.Valida()) {
                    if (cidade == null) {
                        cidade = new HefCidade();

                    }
                    cidade.setIduf(ufCidade);
                    cidade.setSigla(cidadeSigla.getText());
                    cidade.setDescricao(cidadeDesc.getText());
                    salvar(new BeanEvent(this, cidade));
                }

            } else {
                cadastros.setSelectedComponent(estadoJP);
                HFBallonUtil.showTimedBallon(usuariosCadastradosJp1, Messages.getMessage("cidade.uf.erro"), MessageIcon.WARNING.getIcon());
            }
        } else if (cadastros.getSelectedComponent().equals(logradouroJP)) {
            HefCidade logCidade;
            if (listaCidade.getSelectedRow() > -1) {
                logCidade = (HefCidade) listaCidade.getValorColunaDaLinhaSelecionada(CID_OBJ);
                if (logDesc.Valida() && logCep.Valida()) {
                    if (log == null) {
                        log = new HefLogradouro();

                    }
                    log.setIdcidade(logCidade);
                    log.setDescricao(logDesc.getText());
                    log.setCep(new BigInteger(logCep.getValorString()));
                    salvar(new BeanEvent(this, log));
                }

            } else {
                cadastros.setSelectedComponent(estadoJP);
                HFBallonUtil.showTimedBallon(usuariosCadastradosJp2, Messages.getMessage("cidade.cidade.erro"), MessageIcon.WARNING.getIcon());
            }
        }
    }

    public void montaTabelaPais(List<?> lst) {
        listaPais.removeTable();
        listaPais.addListRows(lst);
    }

    public void montaTabelaUF(List<?> lst) {
        listaUF.removeTable();
        listaUF.addListRows(lst);
    }

    public void montaTabelaCidade(List<?> lst) {
        listaCidade.removeTable();
        listaCidade.addListRows(lst);
    }

    public void montaTabelaLog(List<?> lst) {
        listaLog.removeTable();
        listaLog.addListRows(lst);
    }

    public void remontaPais(HefPais pais) {
        this.pais = pais;
        paisSigla.setText(pais.getSigla());
        paisDesc.setText(pais.getDescricao());
    }

    private void remontaUf(HefUf uf) {
        this.uf = uf;
        ufSigla.setText(uf.getSigla());
        ufDesc.setText(uf.getDescricao());
    }

    private void remontaCidade(HefCidade cidade) {
        this.cidade = cidade;
        cidadeSigla.setText(cidade.getSigla());
        cidadeDesc.setText(cidade.getDescricao());
    }

    private void remontaLogradourp(HefLogradouro log) {

        this.log = log;
        logDesc.setText(log.getDescricao());
        logCep.setValorComZerosLPAD(log.getCep(), 8);

    }

}

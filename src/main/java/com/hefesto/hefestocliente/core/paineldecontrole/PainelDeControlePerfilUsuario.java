 /*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hefesto.hefestocliente.core.paineldecontrole;

import com.Hefesto.core.entidades.HefEmpresa;
import com.Hefesto.core.entidades.HefPerfil;
import com.Hefesto.core.entidades.HefPerfilEmpresa;
import com.hefesto.hefestocliente.core.BeanEvent;
import com.hefesto.hefestocliente.core.HefInternalFrame;
import com.hefesto.hefestocliente.core.Messages;
import com.hefesto.hefestocliente.core.paineldecontroleBean.PainelDeControlePerfilUsuarioBean;
import com.hefesto.hefestocliente.core.paineldecontroleListner.PainelDeControlePerfilUsuarioListner;
import com.hefesto.hefestocomponentes.HFModal.HFModalEnum;
import com.hefesto.hefestocomponentes.HFModal.HFModalPainel;
import com.hefesto.hefestocomponentes.HFTable.utils.HFTableUtil;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

/**
 *
 * @author jr
 */
public class PainelDeControlePerfilUsuario extends HefInternalFrame {

    private int count = 0;
    private int DESC = count++;
    private int EMPRESA = count++;
    private int GERENTE = count++;
    private int ADMINITRADOR = count++;
    private int ADMINITRADOR_MASTER = count++;
    private int OBJ = count++;
    private PainelDeControlePerfilUsuarioListner listner;
    private HefPerfilEmpresa perfilEmpresa;

    public PainelDeControlePerfilUsuario() {
        initComponents();
        setmessageLabel(messageLAbel);
        PainelDeControlePerfilUsuarioBean bean = icone.getBeanInstance(PainelDeControlePerfilUsuarioBean.class);
        addBeanListner(bean);
        listner = bean;
        lookup(new BeanEvent(this, null));
        carregar(new BeanEvent(this, null));

        if (icone.getUsuario().getIdperfil().getIdgerente()) {
            filialLabel.setVisible(false);
            idAdm.setVisible(false);
            idEmpresa.setVisible(false);
            idAdmEmp.setVisible(false);
        } else if (icone.getUsuario().getIdperfil().getIdadministradorEmpresa()) {
            idAdm.setVisible(false);
            idEmpresa.setVisible(false);
        }
        new HFTableUtil(listaPerfis).colorize().hideColumn(OBJ).setarCheckBox();

    }

    /**
     * Creates new form HFCadastroTelas public HFCadastroTelas(HFTelaPrincipal
     * principalframe, HefUsu usuario) { super(principalframe, usuario); }
     *
     *
     *
     * /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        try {
            desc = new com.hefesto.hefestocomponentes.HFTextField.HFTextField();
        } catch (java.lang.Exception e1) {
            e1.printStackTrace();
        }
        idGerente = new javax.swing.JCheckBox();
        idAdm = new javax.swing.JCheckBox();
        filialLabel = new javax.swing.JLabel();
        idEmpresa = new com.hefesto.hefestocomponentes.HFComboBox.HFComboBox();
        idAdmEmp = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaPerfis = new com.hefesto.hefestocomponentes.HFTable.HFTable();
        jpane = new javax.swing.JPanel();
        messageLAbel = new com.hefesto.hefestocomponentes.HFLabel.HFLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de Perfil"));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Descrição:");

        desc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descActionPerformed(evt);
            }
        });

        idGerente.setText("Gerente");
        idGerente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idGerenteActionPerformed(evt);
            }
        });

        idAdm.setText("Administrador Master");

        filialLabel.setText("Empresa:");

        idEmpresa.setPesquisavel(java.lang.Boolean.TRUE);

        idAdmEmp.setText("Administrador");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(filialLabel)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(desc, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(idGerente)
                        .addGap(18, 18, 18)
                        .addComponent(idAdmEmp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(idAdm)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(idEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(desc, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(idEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filialLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idGerente)
                    .addComponent(idAdm)
                    .addComponent(idAdmEmp))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Perfis Cadastrados"));

        listaPerfis.setColunas(new String[] {"Descricao", "Empresa", "Gerente", "Administrador", "Administrador Master", "OBJ"});
        listaPerfis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaPerfisMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listaPerfis);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jpane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jpaneLayout = new javax.swing.GroupLayout(jpane);
        jpane.setLayout(jpaneLayout);
        jpaneLayout.setHorizontalGroup(
            jpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(messageLAbel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpaneLayout.setVerticalGroup(
            jpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpaneLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(messageLAbel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hFComboBox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hFComboBox1FocusLost

    }//GEN-LAST:event_hFComboBox1FocusLost

    private void hFComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hFComboBox1ActionPerformed

    }//GEN-LAST:event_hFComboBox1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void descActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descActionPerformed

    private void listaPerfisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaPerfisMouseClicked
        if (evt.getClickCount() == 2) {
            if (listaPerfis.getSelectedRow() > -1) {
                montaPerfil((HefPerfilEmpresa) listaPerfis.getValorColunaDaLinhaSelecionada(OBJ));
            }
        }
    }//GEN-LAST:event_listaPerfisMouseClicked

    private void idGerenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idGerenteActionPerformed

    }//GEN-LAST:event_idGerenteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.hefesto.hefestocomponentes.HFTextField.HFTextField desc;
    private javax.swing.JLabel filialLabel;
    private javax.swing.JCheckBox idAdm;
    private javax.swing.JCheckBox idAdmEmp;
    private com.hefesto.hefestocomponentes.HFComboBox.HFComboBox idEmpresa;
    private javax.swing.JCheckBox idGerente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jpane;
    private com.hefesto.hefestocomponentes.HFTable.HFTable listaPerfis;
    private com.hefesto.hefestocomponentes.HFLabel.HFLabel messageLAbel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void novo() {
        Limpar();
    }

    @Override
    public void Limpar() {
        desc.setText("");
        if (icone.getUsuario().getIdperfil().getIdgerente()) {
            filialLabel.setVisible(false);
            idAdm.setVisible(false);
            idEmpresa.setVisible(false);
            idAdmEmp.setVisible(false);
        } else if (icone.getUsuario().getIdperfil().getIdadministradorEmpresa()) {
            idAdm.setVisible(false);
            filialLabel.setVisible(false);
            idEmpresa.setVisible(false);
        }
        perfilEmpresa = null;
        carregar(new BeanEvent(this, null));
    }

    @Override
    public void salvar() {

        if (desc.Valida()) {
            HefPerfil perfil;
            if (perfilEmpresa == null) {
                perfil = new HefPerfil();
                perfilEmpresa = new HefPerfilEmpresa();
                perfilEmpresa.setIdperfil(perfil);
            }
            perfil = perfilEmpresa.getIdperfil();
            perfil.setDescricao(desc.getText());
            perfil.setIdgerente(idGerente.isSelected());
            perfil.setIdadministrador(idAdm.isSelected());
            perfil.setIdadministradorEmpresa(idAdmEmp.isSelected());

            if (icone.getUsuario().getIdperfil().getIdadministrador()) {
                if (idEmpresa.valida()) {
                    HefEmpresa empresa = (HefEmpresa) idEmpresa.getObjetoSelecionado();
                    perfilEmpresa.setIdempresa(empresa);
                } else {
                    return;
                }
            } else {
                perfilEmpresa.setIdempresa(listner.buscaEmpresaUsuario(new BeanEvent(this, icone.getUsuario().getIdfilial())));
            }
            perfilEmpresa.setIdperfil(perfil);

            salvar(new BeanEvent(this, perfilEmpresa));

        }

    }

    public void montaTabela(List<?> lst) {
        listaPerfis.removeTable();
        listaPerfis.addListRows(lst);
    }

    @Override
    public void excluir() {
        if (listaPerfis.getSelectedRow() > -1) {
            new HFModalPainel(this, "Confirma Exclusão", Messages.getMessage("perfil.confirm.exclusao"), HFModalEnum.QUESTION_MODAL,
                    new ActionListener() {

                        @Override
                        public void actionPerformed(ActionEvent e) {
                            perfilEmpresa = (HefPerfilEmpresa) listaPerfis.getValorColunaDaLinhaSelecionada(OBJ);
                            excluir(new BeanEvent(PainelDeControlePerfilUsuario.this, perfilEmpresa));
                        }
                    });
        }
    }

    private void montaPerfil(HefPerfilEmpresa perfilEmpresa) {
        this.perfilEmpresa = perfilEmpresa;

        desc.setText(perfilEmpresa.getIdperfil().getDescricao());
        idAdm.setSelected(perfilEmpresa.getIdperfil().getIdadministrador());
        idAdmEmp.setSelected(perfilEmpresa.getIdperfil().getIdadministradorEmpresa());
        idGerente.setSelected(perfilEmpresa.getIdperfil().getIdgerente());
        idEmpresa.setObjetoSelecionado(perfilEmpresa.getIdempresa());
    }

    public void montaComboEmpresa(List<?> lst) {
        idEmpresa.adicionarItens(lst);
    }

}

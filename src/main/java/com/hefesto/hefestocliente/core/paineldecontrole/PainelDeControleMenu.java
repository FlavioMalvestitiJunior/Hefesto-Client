/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hefesto.hefestocliente.core.paineldecontrole;

import com.Hefesto.core.entidades.HefMenu;
import com.hefesto.hefestocliente.Core.paineldecontroleListner.PainelDeControleMenuListner;
import com.hefesto.hefestocliente.Core.utils.MessageIcon;
import com.hefesto.hefestocliente.core.BeanEvent;
import com.hefesto.hefestocliente.core.HefInternalFrame;
import com.hefesto.hefestocliente.core.Messages;
import com.hefesto.hefestocliente.core.paineldecontroleBean.PainelDeControleMenuBean;
import com.hefesto.hefestocomponentes.HFBaloon.HFBallonUtil;
import com.hefesto.hefestocomponentes.HFModal.HFModalEnum;
import com.hefesto.hefestocomponentes.HFModal.HFModalPainel;
import com.hefesto.hefestocomponentes.HFTable.utils.HFTableUtil;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

/**
 *
 * @author jr
 */
public class PainelDeControleMenu extends HefInternalFrame {

    private int count = 0;
    private int CODMENU = count++;
    private int DESCMENU = count++;
    private int MENUPAI = count++;
    private int OBJ = count++;

    private HefMenu menu;
    private PainelDeControleMenuListner listner;

    public PainelDeControleMenu() {
        initComponents();
        setmessageLabel(messageLAbel);
        PainelDeControleMenuBean bean = icone.getBeanInstance(PainelDeControleMenuBean.class);
        addBeanListner(bean);
        listner = bean;
        lookup(new BeanEvent(this, null));
        carregar(new BeanEvent(this, null));

        new HFTableUtil(listaMenus).colorize().hideColumn(OBJ);

    }

    /**
     * Creates new form HFCadastroTelas public HFCadastroTelas(HFTelaPrincipal
     * principalframe, HefUsu usuario) { super(principalframe, usuario); }
     *
     *
     *
     * /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        idMenuPai = new com.hefesto.hefestocomponentes.HFComboBox.HFComboBox();
        try {
            desc = new com.hefesto.hefestocomponentes.HFTextField.HFTextField();
        } catch (java.lang.Exception e1) {
            e1.printStackTrace();
        }
        try {
            cod = new com.hefesto.hefestocomponentes.HFTextField.HFTextField();
        } catch (java.lang.Exception e1) {
            e1.printStackTrace();
        }
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaMenus = new com.hefesto.hefestocomponentes.HFTable.HFTable();
        jpane = new javax.swing.JPanel();
        messageLAbel = new com.hefesto.hefestocomponentes.HFLabel.HFLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de Tela"));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Descrição:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Código:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Menu Pai:");

        idMenuPai.setPesquisavel(java.lang.Boolean.TRUE);
        idMenuPai.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                idMenuPaiFocusLost(evt);
            }
        });

        desc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(idMenuPai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cod, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
                    .addComponent(desc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(desc, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cod, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idMenuPai, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Telas Cadastradas"));

        listaMenus.setColunas(new String[] {"Código", "Descricao", "Menu Pai", "OBJ"});
        listaMenus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaMenusMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listaMenus);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jpane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jpaneLayout = new javax.swing.GroupLayout(jpane);
        jpane.setLayout(jpaneLayout);
        jpaneLayout.setHorizontalGroup(
            jpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(messageLAbel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpaneLayout.setVerticalGroup(
            jpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpaneLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(messageLAbel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hFComboBox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hFComboBox1FocusLost

    }//GEN-LAST:event_hFComboBox1FocusLost

    private void hFComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hFComboBox1ActionPerformed

    }//GEN-LAST:event_hFComboBox1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void idMenuPaiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idMenuPaiFocusLost

    }//GEN-LAST:event_idMenuPaiFocusLost

    private void descActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descActionPerformed

    private void listaMenusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaMenusMouseClicked
        if (evt.getClickCount() == 2) {
            if (listaMenus.getSelectedRow() > -1) {
                montaMenu((HefMenu) listaMenus.getValorColunaDaLinhaSelecionada(OBJ));
            }
        }
    }//GEN-LAST:event_listaMenusMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.hefesto.hefestocomponentes.HFTextField.HFTextField cod;
    private com.hefesto.hefestocomponentes.HFTextField.HFTextField desc;
    private com.hefesto.hefestocomponentes.HFComboBox.HFComboBox idMenuPai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jpane;
    private com.hefesto.hefestocomponentes.HFTable.HFTable listaMenus;
    private com.hefesto.hefestocomponentes.HFLabel.HFLabel messageLAbel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void novo() {
        Limpar();
    }

    @Override
    public void Limpar() {
        desc.setText("");
        cod.setText("");
        cod.setBorder(null);
        idMenuPai.LimparComponente();
        menu = null;
        carregar(new BeanEvent(this, null));
    }

    @Override
    public void salvar() {
        if (menu == null) {
            menu = new HefMenu();
        }
        if (desc.Valida() && cod.Valida()) {
            menu.setCodigo(cod.getText());
            menu.setIdmenuPai(idMenuPai.getObjetoSelecionado() != null ? (HefMenu) idMenuPai.getObjetoSelecionado() : null);
            menu.setNome(desc.getText());
            if (listner.ValidaMenuPai(menu)) {
                salvar(new BeanEvent(this, menu));
            } else {
                new HFBallonUtil().showTimedBallon(idMenuPai, Messages.getMessage("menu.menupai.invalido"), MessageIcon.WARNING.getIcon());
            }
        }

    }

    public void montaCombo(List<?> menus) {
        idMenuPai.adicionarItens(menus);
    }

    public void montaTabela(List<?> lst) {
        listaMenus.removeTable();
        listaMenus.addListRows(lst);
    }

    public void remonta() {

    }

    @Override
    public void excluir() {
        if (listaMenus.getSelectedRow() > -1) {
            new HFModalPainel(this, "Confirma Exclusão", Messages.getMessage("menu.confirm.exclusao"), HFModalEnum.QUESTION_MODAL,
                    new ActionListener() {

                        @Override
                        public void actionPerformed(ActionEvent e) {
                            menu = (HefMenu) listaMenus.getValorColunaDaLinhaSelecionada(OBJ);
                            excluir(new BeanEvent(PainelDeControleMenu.this, menu));
                        }
                    });
        }
    }

    private void montaMenu(HefMenu menu) {
        this.menu = menu;

        desc.setText(menu.getNome());
        cod.setText(menu.getCodigo());
        idMenuPai.setObjetoSelecionado(menu.getIdmenuPai());
    }

}

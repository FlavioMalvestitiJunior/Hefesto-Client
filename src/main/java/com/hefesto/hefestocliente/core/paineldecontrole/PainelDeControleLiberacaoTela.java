 /*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hefesto.hefestocliente.core.paineldecontrole;

import com.Hefesto.core.entidades.HefLiberacaoTela;
import com.Hefesto.core.entidades.HefPerfil;
import com.Hefesto.core.entidades.HefTelas;
import com.hefesto.hefestocliente.core.BeanEvent;
import com.hefesto.hefestocliente.core.HefInternalFrame;
import com.hefesto.hefestocliente.core.paineldecontroleBean.PainelDeControleLiberacaoTelaBean;
import com.hefesto.hefestocomponentes.HFPair.HFPair;
import com.hefesto.hefestocomponentes.HFTable.utils.HFTableUtil;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.ListSelectionModel;

/**
 *
 * @author jr
 */
public class PainelDeControleLiberacaoTela extends HefInternalFrame {

    private int count = 0;
    private int COD_TELA = count++;
    private int DESCRICAO_TELA = count++;
    private int OBJ_TELA = count++;
    private int count2 = 0;
    private int COD_LIB = count2++;
    private int DESCRICAO_LIB = count2++;
    private int SALVAR_LIB = count2++;
    private int EXCLUIR_LIB = count2++;
    private int PROCESSAR_LIB = count2++;
    private int OBJ_LIB = count2++;
    private HefLiberacaoTela liberacaoTela;

    public PainelDeControleLiberacaoTela() {
        initComponents();
        setmessageLabel(messageLAbel);
        PainelDeControleLiberacaoTelaBean bean = icone.getBeanInstance(PainelDeControleLiberacaoTelaBean.class);
        addBeanListner(bean);
        lookup(new BeanEvent(this, null));
        carregar(new BeanEvent(this, null));

        new HFTableUtil(listaTelas).colorize().hideColumn(OBJ_TELA);
        new HFTableUtil(listaTelasLiberacao).colorize().hideColumn(OBJ_LIB).setarCheckBox()
                .setarCheckBoxSelectable(SALVAR_LIB)
                .setarCheckBoxSelectable(EXCLUIR_LIB)
                .setarCheckBoxSelectable(PROCESSAR_LIB);
        listaTelas.getSelectionModel().setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        listaTelasLiberacao.getSelectionModel().setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
    }

    /**
     * Creates new form HFCadastroTelas public HFCadastroTelas(HFTelaPrincipal
     * principalframe, HefUsu usuario) { super(principalframe, usuario); }
     *
     *
     *
     * /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        filialLabel = new javax.swing.JLabel();
        idPerfil = new com.hefesto.hefestocomponentes.HFComboBox.HFComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaTelas = new com.hefesto.hefestocomponentes.HFTable.HFTable();
        jpane = new javax.swing.JPanel();
        messageLAbel = new com.hefesto.hefestocomponentes.HFLabel.HFLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaTelasLiberacao = new com.hefesto.hefestocomponentes.HFTable.HFTable();
        foward = new javax.swing.JButton();
        fastfoward = new javax.swing.JButton();
        fastrewind = new javax.swing.JButton();
        rewind = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de Tela"));

        filialLabel.setText("Perfil de Usuário:");

        idPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idPerfilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filialLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(filialLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Telas Cadastradas"));

        listaTelas.setColunas(new String[] {"Código", "Descricao", "OBJ"});
        listaTelas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaTelasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listaTelas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jpane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jpaneLayout = new javax.swing.GroupLayout(jpane);
        jpane.setLayout(jpaneLayout);
        jpaneLayout.setHorizontalGroup(
            jpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(messageLAbel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpaneLayout.setVerticalGroup(
            jpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpaneLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(messageLAbel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Telas Liberadas"));

        listaTelasLiberacao.setColunas(new String[] {"Código", "Descricao", "Salvar", "Excluir", "Processar", "OBJ"});
        listaTelasLiberacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaTelasLiberacaoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listaTelasLiberacao);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        foward.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/foward.png"))); // NOI18N
        foward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fowardActionPerformed(evt);
            }
        });

        fastfoward.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/fastfoward.png"))); // NOI18N
        fastfoward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fastfowardActionPerformed(evt);
            }
        });

        fastrewind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/fastrewind.png"))); // NOI18N
        fastrewind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fastrewindActionPerformed(evt);
            }
        });

        rewind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/rewind.png"))); // NOI18N
        rewind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rewindActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(foward, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fastfoward, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(fastrewind, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rewind, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(foward, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fastfoward, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fastrewind, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rewind, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hFComboBox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hFComboBox1FocusLost

    }//GEN-LAST:event_hFComboBox1FocusLost

    private void hFComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hFComboBox1ActionPerformed

    }//GEN-LAST:event_hFComboBox1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void listaTelasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaTelasMouseClicked
    }//GEN-LAST:event_listaTelasMouseClicked

    private void listaTelasLiberacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaTelasLiberacaoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_listaTelasLiberacaoMouseClicked

    private void fastfowardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fastfowardActionPerformed
        int linhas = listaTelas.getRowCount() - 1;
        for (int i = 0; i <= linhas; i++) {

            List<Object> vec = new ArrayList<>();
            vec.add(listaTelas.getValueAt(i, COD_TELA));
            vec.add(listaTelas.getValueAt(i, DESCRICAO_TELA));
            vec.add(false);
            vec.add(false);
            vec.add(false);
            HefLiberacaoTela per = new HefLiberacaoTela();
            per.setIdtela((HefTelas) listaTelas.getValueAt(i, OBJ_TELA));
            per.setIdperfil((HefPerfil) idPerfil.getObjetoSelecionado());
            vec.add(per);
            listaTelasLiberacao.addRow(vec);

        }
        listaTelas.removeTable();
    }//GEN-LAST:event_fastfowardActionPerformed

    private void fastrewindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fastrewindActionPerformed
        int linhas = listaTelasLiberacao.getRowCount() - 1;
        for (int i = 0; i <= linhas; i++) {
            List<Object> vec = new ArrayList<>();
            vec.add(listaTelasLiberacao.getValueAt(i, COD_LIB));
            vec.add(listaTelasLiberacao.getValueAt(i, DESCRICAO_LIB));
            HefLiberacaoTela perfilTela = (HefLiberacaoTela) listaTelasLiberacao.getValueAt(i, OBJ_LIB);
            vec.add(perfilTela.getIdtela());
            listaTelas.addRow(vec);
        }
        listaTelasLiberacao.removeTable();
    }//GEN-LAST:event_fastrewindActionPerformed

    private void rewindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rewindActionPerformed
        int[] linhas = listaTelasLiberacao.getSelectedRows();
        for (int i = 0; i < linhas.length; i++) {
            Integer linha = linhas[i];
            List<Object> vec = new ArrayList<>();
            vec.add(listaTelasLiberacao.getValueAt(linha, COD_LIB));
            vec.add(listaTelasLiberacao.getValueAt(linha, DESCRICAO_LIB));
            HefLiberacaoTela perfilTela = (HefLiberacaoTela) listaTelasLiberacao.getValueAt(linha, OBJ_LIB);
            vec.add(perfilTela.getIdtela());
            listaTelas.addRow(vec);
        }
        listaTelasLiberacao.clearSelection();
        for (int j = 0; j < listaTelas.getRowCount(); j++) {
            Integer l = listaTelasLiberacao.ComparaValoresInt((String) listaTelas.getValueAt(j, 0), 0, false);
            if (l != null) {
                listaTelasLiberacao.removeRow(l);
                //listaLib.removeLinha(l);
            }
        }

    }//GEN-LAST:event_rewindActionPerformed

    private void idPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idPerfilActionPerformed
        if (idPerfil.getObjetoSelecionado() != null) {
            processar(new BeanEvent(this, idPerfil.getObjetoSelecionado()));
        } else {
            listaTelas.removeTable();
            listaTelasLiberacao.removeTable();
        }
    }//GEN-LAST:event_idPerfilActionPerformed

    private void fowardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fowardActionPerformed
        int[] linhas = listaTelas.getSelectedRows();
        for (int i = 0; i < linhas.length; i++) {
            Integer linha = linhas[i];

            Vector vec = new Vector();
            vec.add(listaTelas.getValueAt(linha, COD_TELA));
            vec.add(listaTelas.getValueAt(linha, DESCRICAO_TELA));
            vec.add(false);
            vec.add(false);
            vec.add(false);
            HefLiberacaoTela per = new HefLiberacaoTela();
            per.setIdtela((HefTelas) listaTelas.getValueAt(linha, OBJ_TELA));
            per.setIdperfil((HefPerfil) idPerfil.getObjetoSelecionado());
            vec.add(per);
            listaTelasLiberacao.addRow(vec);

        }
        //listaSist.removeLinhas(linhas);
        listaTelas.clearSelection();
        for (int j = 0; j < listaTelasLiberacao.getRowCount(); j++) {
            Integer l = listaTelas.ComparaValoresInt((String) listaTelasLiberacao.getValueAt(j, 0), 0, false);
            if (l != null) {
                listaTelas.removeRow(l);
                listaTelas.repaint();
                //listaSist.removeLinha(l);
            }
        }
    }//GEN-LAST:event_fowardActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton fastfoward;
    private javax.swing.JButton fastrewind;
    private javax.swing.JLabel filialLabel;
    private javax.swing.JButton foward;
    private com.hefesto.hefestocomponentes.HFComboBox.HFComboBox idPerfil;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel jpane;
    private com.hefesto.hefestocomponentes.HFTable.HFTable listaTelas;
    private com.hefesto.hefestocomponentes.HFTable.HFTable listaTelasLiberacao;
    private com.hefesto.hefestocomponentes.HFLabel.HFLabel messageLAbel;
    private javax.swing.JButton rewind;
    // End of variables declaration//GEN-END:variables

    @Override
    public void novo() {
        Limpar();
    }

    @Override
    public void Limpar() {
        listaTelas.removeTable();
        listaTelasLiberacao.removeTable();
        carregar(new BeanEvent(this, null));
    }

    @Override
    public void salvar() {
        if (idPerfil.valida()) {
            List<HefLiberacaoTela> telasLiberadas = new ArrayList<>();
            HefLiberacaoTela tl;
            for (int i = 0; i < listaTelasLiberacao.getRowCount(); i++) {
                tl = (HefLiberacaoTela) listaTelasLiberacao.getValueAT(i, OBJ_LIB);
                tl.setR(true);
                tl.setWr((Boolean) listaTelasLiberacao.getValueAT(i, EXCLUIR_LIB));
                tl.setWs((Boolean) listaTelasLiberacao.getValueAT(i, SALVAR_LIB));
                tl.setX((Boolean) listaTelasLiberacao.getValueAT(i, PROCESSAR_LIB));
                telasLiberadas.add(tl);
            }
            HFPair<HefPerfil, List<HefLiberacaoTela>> pair = new HFPair<>();
            pair.setOne((HefPerfil) idPerfil.getObjetoSelecionado());
            pair.setTwo(telasLiberadas);

            salvar(new BeanEvent(this, pair));
        }
    }

    public void montaTabelaTelas(List<?> lst) {
        listaTelas.removeTable();
        listaTelas.addListRows(lst);
    }

    public void montaTabelaLiberacoes(List<?> lst) {
        listaTelasLiberacao.removeTable();
        listaTelasLiberacao.addListRows(lst);
    }

    public void montaComboPerfil(List<?> lst) {
        idPerfil.adicionarItens(lst);
    }

}

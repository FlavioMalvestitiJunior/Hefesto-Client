/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hefesto.hefestocliente.core.telaprincipal;

import com.Hefesto.core.entidades.HefNotas;
import com.hefesto.hefestocliente.Core.HefProperties;
import com.hefesto.hefestocliente.Core.telaprincipalBean.TelaPrincipalCarregaMenuBean;
import com.hefesto.hefestocliente.Core.utils.PrefListener;
import com.hefesto.hefestocliente.core.HefInternalFrame;
import com.hefesto.hefestocliente.core.Icone;
import com.hefesto.hefestocliente.core.Messages;
import com.hefesto.hefestocliente.core.paineldecontrole.PainelDeControle;
import com.hefesto.hefestocliente.core.relatorio.RelatorioViewer;
import com.hefesto.hefestocliente.core.utils.HFFuncionalidade;
import com.hefesto.hefestocliente.core.utils.HefPreferenceMananger;
import com.hefesto.hefestocomponentes.HFLabel.HFLabelEnum;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JMenu;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.japura.modal.Modal;
import static org.japura.modal.Modal.addModal;
import org.jdesktop.swingx.JXTaskPane;
import org.noos.xing.mydoggy.DockedTypeDescriptor;
import org.noos.xing.mydoggy.FloatingTypeDescriptor;
import org.noos.xing.mydoggy.SlidingTypeDescriptor;
import org.noos.xing.mydoggy.ToolWindow;
import org.noos.xing.mydoggy.ToolWindowAnchor;
import org.noos.xing.mydoggy.ToolWindowType;

/**
 *
 * @author flavio
 */
public class TelaPrincipal extends javax.swing.JFrame {

    Icone icone = Icone.getInstance();
    List<JMenu> menusFixos;
    List<JMenu> menusDinamicos;
    HefProperties properties;
    PrefListener prefListener;
    TelaPrincipalCarregaMenuBean menuBean;

    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() throws Exception {
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        initComponents();
        desktop.remove(menuLateral);
        initWindowsManager();
        recuperaMenusFixos();
        inciaLogon();
        menuBean = new TelaPrincipalCarregaMenuBean();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JSplitPane();
        menuLateral = new org.jdesktop.swingx.JXTaskPaneContainer();
        desktopManager = new javax.swing.JDesktopPane();
        FilaRelatoriosPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        principalTabRel = new com.hefesto.hefestocomponentes.HFTable.HFTable();
        loginPainel = new com.hefesto.hefestocomponentes.HFLogon.HFLoginPainel();
        menuSelectionGroup = new javax.swing.ButtonGroup();
        atualizacao = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        painelPesquisar = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        try {
            hFTextField1 = new com.hefesto.hefestocomponentes.HFTextField.HFTextField();
        } catch (java.lang.Exception e1) {
            e1.printStackTrace();
        }
        jPopupMenu1 = new javax.swing.JPopupMenu();
        windowManangerOne = new org.noos.xing.mydoggy.plaf.MyDoggyToolWindowManager();
        principalBar = new javax.swing.JToolBar();
        novo = new javax.swing.JButton();
        abrir = new javax.swing.JButton();
        salvar = new javax.swing.JButton();
        processar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        pesquisar = new javax.swing.JButton();
        relatorio = new javax.swing.JButton();
        organizar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        logoff = new javax.swing.JButton();
        sair = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jPanel1 = new javax.swing.JPanel();
        jLabelUsuario = new javax.swing.JLabel();
        usuarioLogado = new javax.swing.JLabel();
        messgeLabel = new com.hefesto.hefestocomponentes.HFLabel.HFLabel();
        menuSuperiror = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        novoMenu = new javax.swing.JMenuItem();
        abrirMenu = new javax.swing.JMenuItem();
        salvarMenu = new javax.swing.JMenuItem();
        processarMenu = new javax.swing.JMenuItem();
        excluirMenu = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        logoffMenu = new javax.swing.JMenuItem();
        sairMenu = new javax.swing.JMenuItem();
        idmenuLateral = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        idmenuSuperior = new javax.swing.JRadioButtonMenuItem();

        menuLateral.setBackground(new java.awt.Color(0, 50, 91));
        org.jdesktop.swingx.VerticalLayout verticalLayout2 = new org.jdesktop.swingx.VerticalLayout();
        verticalLayout2.setGap(14);
        menuLateral.setLayout(verticalLayout2);
        desktop.setLeftComponent(menuLateral);

        desktopManager.setBackground(new java.awt.Color(127, 180, 212));
        desktopManager.setToolTipText("");
        desktop.setRightComponent(desktopManager);

        principalTabRel.setColunas(new String[] {"PIDR", "Titúlo", "Status"});
        jScrollPane1.setViewportView(principalTabRel);

        javax.swing.GroupLayout FilaRelatoriosPanelLayout = new javax.swing.GroupLayout(FilaRelatoriosPanel);
        FilaRelatoriosPanel.setLayout(FilaRelatoriosPanelLayout);
        FilaRelatoriosPanelLayout.setHorizontalGroup(
            FilaRelatoriosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
        );
        FilaRelatoriosPanelLayout.setVerticalGroup(
            FilaRelatoriosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
        );

        atualizacao.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 0), 5));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/star128.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Atualização");
        jLabel2.setToolTipText("");

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Uma nova versão do Sistema\nfoi localizada, por favor\nreinicie o sistema para que \nele seja atualizado.");
        jTextArea1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextArea1.setOpaque(false);
        jScrollPane2.setViewportView(jTextArea1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/checkmark.png"))); // NOI18N
        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/cancel.png"))); // NOI18N
        jButton3.setText("Fechar Sistema");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout atualizacaoLayout = new javax.swing.GroupLayout(atualizacao);
        atualizacao.setLayout(atualizacaoLayout);
        atualizacaoLayout.setHorizontalGroup(
            atualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(atualizacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, atualizacaoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2))
        );
        atualizacaoLayout.setVerticalGroup(
            atualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(atualizacaoLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(atualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(atualizacaoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(atualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        painelPesquisar.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisar"));

        jLabel3.setText("Código Tela:");

        hFTextField1.setFocusTraversalPolicyProvider(true);
        hFTextField1.setMaiusculo(java.lang.Boolean.TRUE);
        hFTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hFTextField1KeyPressed(evt);
            }
        });
        hFTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hFTextField1ActionPerformed(evt);
            }
        });
        hFTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                hFTextField1FocusLost(evt);
            }
        });

        javax.swing.GroupLayout painelPesquisarLayout = new javax.swing.GroupLayout(painelPesquisar);
        painelPesquisar.setLayout(painelPesquisarLayout);
        painelPesquisarLayout.setHorizontalGroup(
            painelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPesquisarLayout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hFTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
        );
        painelPesquisarLayout.setVerticalGroup(
            painelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(hFTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1024, 768));

        principalBar.setBackground(new java.awt.Color(254, 254, 254));
        principalBar.setFloatable(false);
        principalBar.setRollover(true);

        novo.setBackground(new java.awt.Color(254, 254, 254));
        novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/document_star.png"))); // NOI18N
        novo.setToolTipText("Novo");
        novo.setFocusable(false);
        novo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoActionPerformed(evt);
            }
        });
        principalBar.add(novo);

        abrir.setBackground(new java.awt.Color(254, 254, 254));
        abrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/open_folder.png"))); // NOI18N
        abrir.setToolTipText("Abrir");
        abrir.setFocusable(false);
        abrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        abrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        principalBar.add(abrir);

        salvar.setBackground(new java.awt.Color(254, 254, 254));
        salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/diskette.png"))); // NOI18N
        salvar.setToolTipText("Salvar");
        salvar.setFocusable(false);
        salvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });
        principalBar.add(salvar);

        processar.setBackground(new java.awt.Color(254, 254, 254));
        processar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/document_gear.png"))); // NOI18N
        processar.setToolTipText("Processar");
        processar.setFocusable(false);
        processar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        processar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        processar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processarActionPerformed(evt);
            }
        });
        principalBar.add(processar);

        excluir.setBackground(new java.awt.Color(254, 254, 254));
        excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/trash.png"))); // NOI18N
        excluir.setToolTipText("Deletar");
        excluir.setFocusable(false);
        excluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });
        principalBar.add(excluir);

        pesquisar.setBackground(new java.awt.Color(255, 255, 255));
        pesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/zoom.png"))); // NOI18N
        pesquisar.setToolTipText("Pesquisar");
        pesquisar.setFocusable(false);
        pesquisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pesquisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarActionPerformed(evt);
            }
        });
        principalBar.add(pesquisar);

        relatorio.setBackground(new java.awt.Color(255, 255, 255));
        relatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/clipboard.png"))); // NOI18N
        relatorio.setToolTipText("Relatórios");
        relatorio.setFocusable(false);
        relatorio.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        relatorio.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        relatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatorioActionPerformed(evt);
            }
        });
        principalBar.add(relatorio);

        organizar.setBackground(new java.awt.Color(255, 255, 255));
        organizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/monitor.png"))); // NOI18N
        organizar.setToolTipText("Organizar Telas");
        organizar.setFocusable(false);
        organizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        organizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        organizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizarActionPerformed(evt);
            }
        });
        principalBar.add(organizar);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/controlpainel.png"))); // NOI18N
        jButton1.setToolTipText("Painel de Controle");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        principalBar.add(jButton1);

        logoff.setBackground(new java.awt.Color(254, 254, 254));
        logoff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/logoff64.png"))); // NOI18N
        logoff.setToolTipText("LogOff");
        logoff.setFocusable(false);
        logoff.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        logoff.setMaximumSize(new java.awt.Dimension(64, 64));
        logoff.setMinimumSize(new java.awt.Dimension(64, 64));
        logoff.setPreferredSize(new java.awt.Dimension(64, 64));
        logoff.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        logoff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoffActionPerformed(evt);
            }
        });
        principalBar.add(logoff);

        sair.setBackground(new java.awt.Color(254, 254, 254));
        sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/power64.png"))); // NOI18N
        sair.setToolTipText("Fechar");
        sair.setFocusable(false);
        sair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });
        principalBar.add(sair);
        principalBar.add(jSeparator1);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelUsuario.setText("Usuario: ");

        messgeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                messgeLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usuarioLogado, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(messgeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(usuarioLogado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(messgeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabelUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jMenu1.setText("Arquivo");

        novoMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F10, 0));
        novoMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/document_star20.png"))); // NOI18N
        novoMenu.setText("Novo");
        novoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoMenuActionPerformed(evt);
            }
        });
        jMenu1.add(novoMenu);

        abrirMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        abrirMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/open_folder20.png"))); // NOI18N
        abrirMenu.setText("Abrir");
        abrirMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirMenuActionPerformed(evt);
            }
        });
        jMenu1.add(abrirMenu);

        salvarMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        salvarMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/diskette20.png"))); // NOI18N
        salvarMenu.setText("Salvar");
        salvarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarMenuActionPerformed(evt);
            }
        });
        jMenu1.add(salvarMenu);

        processarMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        processarMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/document_gear20.png"))); // NOI18N
        processarMenu.setText("Executar/Processar");
        processarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processarMenuActionPerformed(evt);
            }
        });
        jMenu1.add(processarMenu);

        excluirMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        excluirMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/trash20.png"))); // NOI18N
        excluirMenu.setText("Excluir");
        excluirMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirMenuActionPerformed(evt);
            }
        });
        jMenu1.add(excluirMenu);
        jMenu1.add(jSeparator2);

        logoffMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        logoffMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/logoff20.png"))); // NOI18N
        logoffMenu.setText("Logoff");
        logoffMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoffMenuActionPerformed(evt);
            }
        });
        jMenu1.add(logoffMenu);

        sairMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        sairMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hefesto/hefestocliente/icones/power20.png"))); // NOI18N
        sairMenu.setText("Sair");
        sairMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairMenuActionPerformed(evt);
            }
        });
        jMenu1.add(sairMenu);

        menuSuperiror.add(jMenu1);

        idmenuLateral.setText("Editar");

        menuSelectionGroup.add(jRadioButtonMenuItem1);
        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("Menu Lateral");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        idmenuLateral.add(jRadioButtonMenuItem1);

        menuSelectionGroup.add(idmenuSuperior);
        idmenuSuperior.setText("Menu Superior");
        idmenuSuperior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idmenuSuperiorActionPerformed(evt);
            }
        });
        idmenuLateral.add(idmenuSuperior);

        menuSuperiror.add(idmenuLateral);

        setJMenuBar(menuSuperiror);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(windowManangerOne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(principalBar, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(principalBar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(windowManangerOne, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoffActionPerformed
        // this.dispose();
        Icone.getInstance().Logoff();
    }//GEN-LAST:event_logoffActionPerformed

    private void organizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizarActionPerformed

    }//GEN-LAST:event_organizarActionPerformed

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        icone.sair();
    }//GEN-LAST:event_sairActionPerformed

    private void novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoActionPerformed
        if (desktopManager.getAllFrames().length > 0) {
            HefInternalFrame frame = (HefInternalFrame) desktopManager.getSelectedFrame();
            frame.novo();
        }
    }//GEN-LAST:event_novoActionPerformed

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        if (desktopManager.getAllFrames().length > 0) {
            HefInternalFrame frame = (HefInternalFrame) desktopManager.getSelectedFrame();
            frame.abrir();
        }
    }//GEN-LAST:event_abrirActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        if (desktopManager.getAllFrames().length > 0) {
            HefInternalFrame frame = (HefInternalFrame) desktopManager.getSelectedFrame();
            frame.salvar();
        }
    }//GEN-LAST:event_salvarActionPerformed

    private void processarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processarActionPerformed
        if (desktopManager.getAllFrames().length > 0) {
            HefInternalFrame frame = (HefInternalFrame) desktopManager.getSelectedFrame();
            frame.processar();
        }
    }//GEN-LAST:event_processarActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        if (desktopManager.getAllFrames().length > 0) {
            HefInternalFrame frame = (HefInternalFrame) desktopManager.getSelectedFrame();
            frame.excluir();
        }
    }//GEN-LAST:event_excluirActionPerformed

    private void pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarActionPerformed
        if (desktopManager.getAllFrames().length > 0) {
            HefInternalFrame frame = (HefInternalFrame) desktopManager.getSelectedFrame();
            if (frame.podePesquisar()) {
                frame.pesquisar();
            } else {
                Modal.addModal(this, painelPesquisar);
            }
        } else {
            Modal.addModal(this, painelPesquisar);
        }
        hFTextField1.grabFocus();
    }//GEN-LAST:event_pesquisarActionPerformed

    private void relatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatorioActionPerformed
        icone.criaFrame(RelatorioViewer.class);
    }//GEN-LAST:event_relatorioActionPerformed

    private void idmenuSuperiorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idmenuSuperiorActionPerformed
        desktop.remove(menuLateral);
        for (JMenu m : menusDinamicos) {
            menuSuperiror.add(m);
        }
        properties.setMenuSuperior(true);
        prefListener.saveFile();
    }//GEN-LAST:event_idmenuSuperiorActionPerformed

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        desktop.add(menuLateral, 0);
        for (JMenu m : menusDinamicos) {
            menuSuperiror.remove(m);
        }
        properties.setMenuSuperior(false);
        prefListener.saveFile();
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        icone.criaFrame(PainelDeControle.class);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Modal.closeModal(atualizacao);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void hFTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hFTextField1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            pesquisarPainel();
        }
    }//GEN-LAST:event_hFTextField1KeyPressed

    private void hFTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hFTextField1FocusLost
        pesquisarPainel();
    }//GEN-LAST:event_hFTextField1FocusLost

    private void hFTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hFTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hFTextField1ActionPerformed

    private void messgeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_messgeLabelMouseClicked
        messgeLabel.limpar();
    }//GEN-LAST:event_messgeLabelMouseClicked

    private void abrirMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirMenuActionPerformed
        if (abrir.isEnabled()) {
            abrir.doClick();
        }
    }//GEN-LAST:event_abrirMenuActionPerformed

    private void processarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processarMenuActionPerformed
        if (processar.isEnabled()) {
            processar.doClick();
        }
    }//GEN-LAST:event_processarMenuActionPerformed

    private void excluirMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirMenuActionPerformed
        if (excluir.isEnabled()) {
            excluir.doClick();
        }
    }//GEN-LAST:event_excluirMenuActionPerformed

    private void salvarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarMenuActionPerformed
        if (salvar.isEnabled()) {
            salvar.doClick();
        }
    }//GEN-LAST:event_salvarMenuActionPerformed

    private void logoffMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoffMenuActionPerformed
        if (logoff.isEnabled()) {
            logoff.doClick();
        }
    }//GEN-LAST:event_logoffMenuActionPerformed

    private void sairMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairMenuActionPerformed
        sair.doClick();
    }//GEN-LAST:event_sairMenuActionPerformed

    private void novoMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoMenuActionPerformed
        if (novo.isEnabled()) {
            novo.doClick();
        }
    }//GEN-LAST:event_novoMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaPrincipal().setVisible(true);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Não Foi Possivel iniciar a Tela Principal.\n" + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel FilaRelatoriosPanel;
    private javax.swing.JButton abrir;
    private javax.swing.JMenuItem abrirMenu;
    private javax.swing.JPanel atualizacao;
    private javax.swing.JSplitPane desktop;
    private javax.swing.JDesktopPane desktopManager;
    private javax.swing.JButton excluir;
    private javax.swing.JMenuItem excluirMenu;
    private com.hefesto.hefestocomponentes.HFTextField.HFTextField hFTextField1;
    private javax.swing.JMenu idmenuLateral;
    private javax.swing.JRadioButtonMenuItem idmenuSuperior;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelUsuario;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTextArea jTextArea1;
    private com.hefesto.hefestocomponentes.HFLogon.HFLoginPainel loginPainel;
    private javax.swing.JButton logoff;
    private javax.swing.JMenuItem logoffMenu;
    private org.jdesktop.swingx.JXTaskPaneContainer menuLateral;
    private javax.swing.ButtonGroup menuSelectionGroup;
    private javax.swing.JMenuBar menuSuperiror;
    private com.hefesto.hefestocomponentes.HFLabel.HFLabel messgeLabel;
    private javax.swing.JButton novo;
    private javax.swing.JMenuItem novoMenu;
    private javax.swing.JButton organizar;
    private javax.swing.JPanel painelPesquisar;
    private javax.swing.JButton pesquisar;
    private javax.swing.JToolBar principalBar;
    private com.hefesto.hefestocomponentes.HFTable.HFTable principalTabRel;
    private javax.swing.JButton processar;
    private javax.swing.JMenuItem processarMenu;
    private javax.swing.JButton relatorio;
    private javax.swing.JButton sair;
    private javax.swing.JMenuItem sairMenu;
    private javax.swing.JButton salvar;
    private javax.swing.JMenuItem salvarMenu;
    private javax.swing.JLabel usuarioLogado;
    private org.noos.xing.mydoggy.plaf.MyDoggyToolWindowManager windowManangerOne;
    // End of variables declaration//GEN-END:variables
private void initWindowsManager() {
        windowManangerOne.registerToolWindow("Relatórios", "", null, FilaRelatoriosPanel, ToolWindowAnchor.RIGHT);
        for (ToolWindow window : windowManangerOne.getToolWindows()) {
            window.setAvailable(true);
            window.setType(ToolWindowType.SLIDING);

            DockedTypeDescriptor dockedTypeDescriptor = (DockedTypeDescriptor) window.getTypeDescriptor(ToolWindowType.DOCKED);
            dockedTypeDescriptor.setDockLength(300);
            dockedTypeDescriptor.setAnimating(true);
            dockedTypeDescriptor.setIdVisibleOnTitleBar(false);

            SlidingTypeDescriptor slidingTypeDescriptor = (SlidingTypeDescriptor) window.getTypeDescriptor(ToolWindowType.SLIDING);
            slidingTypeDescriptor.setEnabled(true);
            slidingTypeDescriptor.setTransparentMode(true);
            slidingTypeDescriptor.setTransparentRatio(0.8f);
            slidingTypeDescriptor.setTransparentDelay(0);
            slidingTypeDescriptor.setAnimating(true);

            FloatingTypeDescriptor floatingTypeDescriptor = (FloatingTypeDescriptor) window.getTypeDescriptor(ToolWindowType.FLOATING);
            floatingTypeDescriptor.setEnabled(true);
            floatingTypeDescriptor.setLocation(150, 200);
            floatingTypeDescriptor.setSize(320, 200);
            floatingTypeDescriptor.setModal(false);
            floatingTypeDescriptor.setTransparentMode(true);
            floatingTypeDescriptor.setTransparentRatio(0.2f);
            floatingTypeDescriptor.setTransparentDelay(1000);
            floatingTypeDescriptor.setAnimating(true);
            floatingTypeDescriptor.setIdVisibleOnTitleBar(false);
        }
        windowManangerOne.getContentManager().addContent("", "", null, desktop);
    }

    public void adicionarModal(Component cmp) {
        novo.setEnabled(false);
        salvar.setEnabled(false);
        abrir.setEnabled(false);
        processar.setEnabled(false);
        relatorio.setEnabled(false);
        excluir.setEnabled(false);
        organizar.setEnabled(false);
        logoff.setEnabled(false);
        sair.setEnabled(false);
        addModal(this, cmp);
    }

    public void removeModal(Component cmp) {
        if (Modal.isModal(cmp)) {
            Modal.closeModal(cmp);
            novo.setEnabled(true);
            salvar.setEnabled(true);
            abrir.setEnabled(true);
            processar.setEnabled(true);
            relatorio.setEnabled(true);
            excluir.setEnabled(true);
            organizar.setEnabled(true);
            logoff.setEnabled(true);
            sair.setEnabled(true);
        }
    }

    public void setWrite(Boolean write) {
        salvar.setEnabled(write);
        excluir.setEnabled(write);
    }

    public void setExecute(Boolean execute) {
        processar.setEnabled(execute);
    }

    /**
     * Executa os Processos para o Logon.
     */
    public void Logon() {
        addModal(this, loginPainel);
    }

    /**
     * Inicia o Painel de Logon
     */
    private void inciaLogon() {
        loginPainel.actionLogar(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                icone.Logon(loginPainel);
            }
        });
    }

    public void setUsuarioLogado(String usuarioLogin) {
        usuarioLogado.setText(usuarioLogin);
    }

    public JDesktopPane getDesktop() {
        return desktopManager;
    }

    private void recuperaMenusFixos() {
        menusFixos = new ArrayList<>();
        for (Component component : menuSuperiror.getComponents()) {
            if (component instanceof JMenu) {
                menusFixos.add((JMenu) component);
            }
        }
    }

    public void setMessage(String teste, HFLabelEnum tpmessage) {
        try {
            messgeLabel.setMessage(teste, tpmessage);
        } catch (Exception ex) {

        }
    }

    /**
     * Carrega as propriedades de forma a ser lida pelo sistema
     *
     * @since 1.7
     * @see PreferencesManager
     * @see SrhProperties
     */
    private void carregaPreferencias() {
        if (prefListener == null) {
            prefListener = new HefPreferenceMananger();
            prefListener.salva(this);
        }
        properties = prefListener.getProperties();
    }

    /**
     * Método que Carrega Todas as InformaCoes Iniciais do Sistema.
     *
     * @since 1.0
     */
    public void CarregaProperties() {
        if (icone.getUsuario() != null) {
            carregaPreferencias();
            aplicaPreferencias();
            montaMenu();

        }
    }

    public void montaMenu() {
        menusDinamicos = (List<JMenu>) menuBean.carregaMenu(icone.telasUsuario(), true);
        List<JXTaskPane> menus = (List<JXTaskPane>) menuBean.carregaMenu(icone.telasUsuario(), false);
        for (JXTaskPane menu : menus) {
            menuLateral.add(menu);
        }
        if (properties.getMenuSuperior()) {
            for (JMenu menu : menusDinamicos) {
                menuSuperiror.add(menu);
            }
        } else {
            desktop.add(menuLateral);
        }
        this.revalidate();
        this.repaint();
    }

    private void aplicaPreferencias() {
        idmenuLateral.setSelected(!properties.getMenuSuperior());
        idmenuSuperior.setSelected(properties.getMenuSuperior());
    }

    public void podeSalvar(Boolean podeSalvar) {
        salvar.setEnabled(podeSalvar);
        salvarMenu.setEnabled(podeSalvar);
    }

    public void podeExecutar(Boolean podeExecutar) {
        processar.setEnabled(podeExecutar);
        processarMenu.setEnabled(podeExecutar);
    }

    public void podeExcluir(Boolean podeExcluir) {
        excluir.setEnabled(podeExcluir);
        excluirMenu.setEnabled(podeExcluir);
    }

    public void podeCarregar(Boolean podeCarregar) {

    }

    public void podeNovo(Boolean podeNovo) {
        novo.setEnabled(podeNovo);
        novoMenu.setEnabled(podeNovo);
    }

    public void podeAbrir(Boolean podeAbrir) {
        abrir.setEnabled(podeAbrir);
        abrirMenu.setEnabled(podeAbrir);
    }

    public void addBotaoSuperior(Component c) {
        principalBar.add(c);
    }

    public void removeBotaoSuperior(Component c) {
        principalBar.remove(c);
        principalBar.revalidate();
        principalBar.repaint();
    }

    public void setPrincipalTabRel(List<?> lst) {
        principalTabRel.removeTable();
        principalTabRel.addListRows(lst);
    }

    public void novidades(HefNotas nota) {
        Modal.addModal(this, atualizacao);
    }

    public void pesquisarPainel() {
        try {
            String func = hFTextField1.getText();
            if (func.startsWith("/")) {
                func = func.replaceAll("/", "");
                HFFuncionalidade.valueOf(func).execute(null);
            } else {
                HFFuncionalidade.ABRIRTELA.execute(func);
            }
            hFTextField1.setText("");
            Modal.closeModal(painelPesquisar);
        } catch (Exception ex) {
            setMessage(Messages.getMessage("erro.funcao.executa"), HFLabelEnum.ERROR_MESSAGE);
            Modal.closeModal(painelPesquisar);
        }
    }
}
